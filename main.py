# -*- coding: utf-8 -*-
"""RNN F-C.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_btxE7ZArFI8Ix9IQzOdibq8DtmPiYiK
"""

import tensorflow as tf
import numpy as np

celsius = np.array ([-40,-10, 0, 8, 15, 22, 38], dtype = float)
Farenheit = np.array ([-40,14, 32, 46, 59, 72, 100], dtype = float)

capa = tf.keras.layers.Dense(units = 1, input_shape =[1])

modelo = tf.keras.Sequential([capa])

modelo.compile(
    optimizer = tf.keras.optimizers.Adam(0.15), # método adam permite como ajustar los pesos
    loss = 'mean_squared_error' #una cantidad de errores grandes es mejor que muchas cant de errores pequeños
)

print ("comenzar entrenamiento")
historial = modelo.fit(celsius, Farenheit, epochs = 300, verbose = False)
print ("Modelo entrenado")

import matplotlib.pyplot as plt
plt.xlabel("# Epoca")
plt.ylabel("Magnitud de pérdida")
plt.plot(historial.history["loss"])

print ("predict ejemplo")
resultado = modelo.predict(np.array([82.0]))
print ("el resultado es " + str(resultado) + " Farenheit")
